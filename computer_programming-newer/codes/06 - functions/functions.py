# -*- coding: utf-8 -*-
"""functions.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zYIqSXqavzMm1qrEUjB8Xg3sP-lDxa5g

# Functions in Python

## No input variables / No output variables
"""

def print_line():
    print('-'*35)

print_line()

"""## One input / No output"""

def print_with_stars(s):
    print(f'**{s}**')

print_with_stars('salam')

"""## One input / One output"""

def double(x):
    y = 2*x
    return y

result = double(42)
print(result)

"""## Two inputs / One output"""

def power_plus(a, b):
    c = a**b
    return c

result = power_plus(2, 3)
print(result)

"""## One input / Two outputs"""

fn, ln = 'ali alavi'.split()
print(fn)
print(ln)

def separate_names(fullname):
    fn, ln = fullname.split()
    return fn, ln

firstname, lastname = separate_names('Saeed Mohagheghi')
print(firstname)
print(lastname)

import time

def time_print(s):
    for c in s:
        print(c, end='')
        time.sleep(0.2)
    print()

time_print('salam donya')

test = 'my very good text'
time_print(test)

"""## National ID Validation"""

import numpy as np


def validate_melli_code(code):
    if len(code) > 10 or len(code) < 8:
        return False
    else:
        # Add zeros to the start of the code to become 10 digits
        code = code.zfill(10)
        print(code)

    code_array = np.array(list(code), dtype=int)[:-1]
    place_array = np.arange(2, 11)[::-1]
    checksum = np.dot(code_array, place_array)
    # checksum = code_array @ place_array

    remainder = checksum % 11

    if remainder < 2:
        control_digit = remainder
    else:
        control_digit = 11 - remainder

    if control_digit == int(code[-1]):
        return True
    else:
        return False

code = input('Please enter your national ID: ')
if validate_melli_code(code):
    print('National ID is valid.')
else:
    print('National ID is invalid.')

